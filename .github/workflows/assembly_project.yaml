name: Assembly project

on:
  workflow_call:
    secrets:
      PAT:
        required: true
        description: "private access token"

    inputs:
      # the application that u want to deploy
      app_repository:
        required: true
        type: string

      app_branch:
        required: true
        type: string
      # For disfferent microservice project path in monorepo
      app_folder_path:
        required: true
        type: string

      # the shared folder path
      shared_folder_path:
        required: false
        type: string
        default: Libs

      # the environment configs that u want to get
      config_repository:
        required: false
        type: string
        default: aoda-zhang/shared-configs

      # the environment configs forlder path
      config_folder_path:
        required: true
        type: string

      # the build artifact options
      build_name:
        required: true
        type: string

      build_path:
        required: false
        type: string
        default: build

      # the build script in package.json
      build_script:
        required: false
        type: string
        default: build:UAT

      # the environment that u want to deploy (uat,prod)
      currentEnvironment:
        required: false
        type: string
        default: UAT

jobs:
  Assembly project:
    environment: ${{ inputs.currentEnvironment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout configs
        uses: actions/checkout@master
        with:
          repository: ${{ inputs.config_repository }}
          ref: main
          token: ${{ secrets.PAT }}
          path: config

      - name: Checkout codes
        uses: actions/checkout@master
        with:
          repository: ${{ inputs.app_repository }}
          ref: ${{ inputs.app_branch }}
          token: ${{ secrets.PAT }}
          path: app

      - name: Set environment variables
        run: |

          if [ ! -d "./config/${{ inputs.config_folder_path }}" ]; then
          echo "Error: Config folder ${inputs.config_folder_path} not found."
          exit 1
          fi

          # Ensure the target directories exist
          mkdir -p ./app/${{inputs.app_folder_path}}/src/config
          mkdir -p ./app/${{inputs.app_folder_path}}/src/shared

          # Copy config and shared folders if they exist
          cp -r ./config/${{ inputs.config_folder_path }}/. ./app/${{inputs.app_folder_path}}/src/config/.
          cp -r ./config/${{ inputs.config_folder_path }}/${{ inputs.currentEnvironment }}/k8s/. ./app/${{inputs.app_folder_path}}/.
          cp -r ./app/pnpm-lock.yaml ./app/${{inputs.app_folder_path}}/.

          cp -r ./app/${{inputs.shared_folder_path}}/. ./app/${{inputs.app_folder_path}}/src/shared/.

          mv ./app/${{ inputs.app_folder_path }}/* .

          rm -rf ./app
          rm -rf ./config

          echo "Project ${{inputs.app_folder_path}} formatted successfully!"

      - name: Upload artifacts
        uses: actions/upload-artifact@master
        with:
          name: ${{ inputs.build_name }}
          path: ${{ inputs.build_path }}
