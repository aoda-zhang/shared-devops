name: Build-and-Push-to-ACR

on:
  workflow_call:
    inputs:
      app_branch:
        required: true
        type: string

      # For disfferent microservice project path in monorepo
      app_folder_path:
        required: true
        type: string

      # the docker file path
      dockerFile_path:
        required: false
        type: string
        default: Dockerfile

      # Build artifact options--------------------------------

      build_path:
        required: false
        type: string
        default: build

      # the build script in package.json
      build_script:
        required: false
        type: string
        default: build:UAT

      # the environment that u want to deploy (uat,prod)
      currentEnvironment:
        required: false
        type: string
        default: UAT

jobs:
  Build-and-Push-to-ACR:
  runs-on: ubuntu-latest
  needs: Shared-build
  steps:
    - name: Download ${{inputs.currentEnvironment}} artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.app_folder_path }}
        path: ${{ inputs.build_path }}

      # Add support for more platforms with QEMU
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v2
      with:
        login-server: ${{ secrets.AZURE_ACR_NAME }}.azurecr.io
        username: ${{ secrets.AZURE_ACR_USERNAME }}
        password: ${{ secrets.AZURE_ACR_PASSWORD }}

    - name: Build Docker image
      id: build_image
      run: |
        cd ./${{ inputs.build_path }}
        IMAGE_NAME=${{ secrets.AZURE_ACR_NAME }}.azurecr.io/${{ inputs.app_folder_path }}/${{ inputs.app_branch }}/${{ inputs.currentEnvironment }}
        docker build -f ./${{inputs.dockerFile_path}} --build-arg BUILD_COMMAND=build:${{inputs.currentEnvironment}} -t $IMAGE_NAME .
        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

    - name: Push Docker image to Azure ACR
      run: |
        docker push ${{ env.IMAGE_NAME }}
