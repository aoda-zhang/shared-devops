on:
  workflow_call:
    secrets:
      PAT:
        required: true
        description: "Personal Access Token"

      DOCKER_SERVER:
        required: true
        description: "azure acr server"

      DOCKER_USERNAME:
        required: true
        description: "azure acr username"

      DOCKER_PASSWORD:
        required: true
        description: "azure acr password"

      AZURE_RESOURCE_GROUP:
        required: true
        description: "azure aks resource group"

      AKS_CLUSTER_NAME:
        required: true
        description: "azure aks cluster name"

      AKS_NAMESPACE:
        required: true
        description: "azure aks application namespace"

      AZURE_CLIENT_ID:
        required: true
        description: "azure aks client id"

      AZURE_TENANT_ID:
        required: true
        description: "azure aks tenant id"

      AZURE_SUBSCRIPTION_ID:
        required: true
        description: "azure aks subscription id"

      AZURE_CREDS:
        required: true
        description: "azure aks subscription id"

    inputs:
      app_repository:
        required: true
        type: string

      app_branch:
        required: true
        type: string

      # For disfferent microservice project path in monorepo
      deployed_app:
        required: true
        type: string

      # For disfferent microservice project path in monorepo
      deploye_type:
        required: true
        type: string
        default: WEB

      config_path:
        required: true
        type: string

      # Build artifact options--------------------------------

      build_path:
        required: false
        type: string
        default: build

      # the docker file path
      dockerFile_path:
        required: true
        type: string

      # the environment that u want to deploy (uat,test,prod)
      currentEnvironment:
        required: true
        type: string

permissions:
  security-events: write
  actions: read
  contents: read
  issues: write
  id-token: write

jobs:
  Prepare-env:
    runs-on: ubuntu-latest
    outputs:
      artifact_name: ${{ steps.set-varibles.outputs.ARTIFACT_NAME }}
      image_tag: ${{ steps.set-varibles.outputs.IMAGE_TAG }}

    steps:
      - name: Setup Dynamic Environment Variables
        id: set-varibles
        run: |
          echo "ARTIFACT_NAME=${{inputs.currentEnvironment}}_${{github.sha}}" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=${{inputs.deployed_app}}/${{inputs.currentEnvironment}}:${{github.sha}}_$(date -u +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: Dynamic Environment Variables Summary
        run: |
          echo -----------  Deployment Summary -----------------------------------------
          echo "The deploy app/service is : ${{ inputs.deployed_app }}"
          echo "The repositry is : ${{ inputs.app_repository }}"
          echo "The app/service branch is : ${{ inputs.app_branch }}" 
          echo "The deployed app config folder Path is : ${{ inputs.config_path }}"
          echo "Current deployed environment is: ${{ inputs.currentEnvironment }}"
          echo "The upload artifact name will be : ${{ steps.set-varibles.outputs.ARTIFACT_NAME }}"
          echo "The deployed image tag will be : ${{ steps.set-varibles.outputs.IMAGE_TAG }}"
          echo -----------  Please check the summary when troubleshooting ----------------

  Project-prepare:
    needs: [Prepare-env]
    uses: ./.github/workflows/shared_project_prepare.yaml
    with:
      app_repository: ${{ inputs.app_repository }}
      app_branch: ${{ inputs.app_branch }}
      deployed_app: ${{ inputs.deployed_app }}
      config_folder: ${{ inputs.config_path }}
      currentEnvironment: ${{ inputs.currentEnvironment }}
      artifact_name: ${{ needs.Prepare-env.outputs.artifact_name }}
    secrets:
      PAT: ${{ secrets.PAT }}

  Build-push-image:
    needs: [Project-prepare, Prepare-env]
    uses: ./.github/workflows/shared_image_build.yaml
    with:
      app_branch: ${{ inputs.app_branch }}
      deployed_app: ${{ inputs.deployed_app }}
      currentEnvironment: ${{ inputs.currentEnvironment }}
      image_tag: ${{  needs.Prepare-env.outputs.image_tag }}
      artifact_name: ${{  needs.Prepare-env.outputs.artifact_name }}
      dockerFile_path: ${{ inputs.dockerFile_path }}
    secrets:
      DOCKER_SERVER: ${{ secrets.DOCKER_SERVER }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  Deploy-To-AKS:
    needs: [Prepare-env, Build-push-image]
    uses: ./.github/workflows/shared_deploy_aks.yaml
    with:
      image_tag: ${{  needs.Prepare-env.outputs.image_tag }}
      artifact_name: ${{  needs.Prepare-env.outputs.artifact_name }}
      currentEnvironment: ${{ inputs.currentEnvironment }}
    secrets:
      DOCKER_SERVER: ${{ secrets.DOCKER_SERVER }}
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
      AKS_CLUSTER_NAME: ${{ secrets.AKS_CLUSTER_NAME }}
      AKS_NAMESPACE: ${{ secrets.AKS_NAMESPACE }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_CREDS: ${{ secrets.AZURE_CREDS }}
